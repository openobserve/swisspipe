name: Build and Push Docker Images

on:
  workflow_dispatch:   # ðŸ‘ˆ allows manual trigger
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
    paths-ignore:
      - '**/*.md'
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.sh'
      - '**/*.txt'
      - '.github/workflows/**'

env:
  REGISTRY: public.ecr.aws
  REPOSITORY: zinclabs/swisspipe

jobs:
  build:
    runs-on: ubicloud-standard-16-arm
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::058694856476:role/GitHubActionsRole
          aws-region: us-east-1
          role-session-name: GitHubActions-SwissPipe

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build frontend first
        run: |
          cd frontend
          npm ci
          npm run build-only
          cd ..
          # Copy dist to project root for Docker build
          cp -r frontend/dist .

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false

      - name: Clean up
        if: always()
        run: |
          rm -rf dist/